FROM node:18-buster

# We need wget to set up the PPA and xvfb to have a virtual screen and unzip to install the Chromedriver
RUN apt-get update && apt-get install -y wget xvfb unzip node.js npm

# Set up the Chrome PPA
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
RUN echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list

# Update the package list and install chrome
RUN apt-get update -y
RUN apt-get install -y google-chrome-stable
RUN apt-get install libgconf-2-4 -y

# Set up Chromedriver Environment variables
ENV CHROMEDRIVER_VERSION 121.0.6167.85
ENV CHROMEDRIVER_DIR /root/
#RUN mkdir $CHROMEDRIVER_DIR

# Download and install Chromedriver
#RUN wget -q --continue -P $CHROMEDRIVER_DIR "http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
#RUN unzip $CHROMEDRIVER_DIR/chromedriver* -d $CHROMEDRIVER_DIR

# Put Chromedriver into the PATH
ENV PATH $CHROMEDRIVER_DIR:$PATH

# COPY the nightwatch file and install nightwatch dependencies
COPY ./public /root/
COPY ./docker/config/chromedriver /root/
COPY ./docker/config/LICENSE.chromedriver /root/


RUN rm -rf /root/node_modules && \
    rm -rf /root/assets && \
    cd /root && \
    npm install

# COPY the test files into a folder named graphical that we create
RUN mkdir /root/graphical
COPY ./tests/Graphical /root/graphical

# We have all our test in the /root/graphical folder
# the nightwatch dependencies are in the /root/ folder
# and the driver is in /root/ its name is chromedriver
WORKDIR /root/nightwatch
CMD ["npx nightwatch"]

# RUN from root folder
    # docker build . -f docker/DockerfileIHMTest -t dpm-php-ihm
# then
    # docker-compose -f dockerIhm-compose.yml up